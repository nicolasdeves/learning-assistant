generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Topic {
  id         Int         @id @default(autoincrement())
  name       String
  activities Activity[]
  createdAt  DateTime    @default(now()) @map("created_at")
  updatedAt  DateTime    @updatedAt @map("updated_at")
  topicUser  TopicUser[]

  @@map("topic")
}

model TopicUser {
  id           Int   @id @default(autoincrement())
  googleUserId Int   @map("google_user_id")
  topicId      Int   @map("topic_id")

  topic Topic @relation(fields: [topicId], references: [id])

  @@map("topic_user")
}

model Activity {
  id        Int        @id @default(autoincrement())
  userId    Int        @map("user_id")
  topicId   Int        @map("topic_id")
  name      String
  date      DateTime
  exercises Exercise[]
  createdAt DateTime   @default(now()) @map("created_at")
  updatedAt DateTime   @updatedAt @map("updated_at")

  topic Topic @relation(fields: [topicId], references: [id])

  @@map("activity")
}

model ExerciseType {
  id          Int        @id @default(autoincrement())
  description String
  exercises   Exercise[]
  createdAt   DateTime   @default(now()) @map("created_at")
  updatedAt   DateTime   @updatedAt @map("updated_at")

  @@map("exercise_type")
}

model Exercise {
  id             Int       @id @default(autoincrement())
  exerciseTypeId Int       @map("exercise_type_id")
  activityId     Int       @map("activity_id")
  name           String
  description    String
  finishedAt     DateTime? @map("finished_at")
  createdAt      DateTime  @default(now()) @map("created_at")
  updatedAt      DateTime  @updatedAt @map("updated_at")

  exerciseType ExerciseType @relation(fields: [exerciseTypeId], references: [id])
  activity     Activity     @relation(fields: [activityId], references: [id])
  alternatives Alternative[]
  answers      Answer[]

  @@map("exercise")
}

model Alternative {
  id          Int      @id @default(autoincrement())
  exerciseId  Int      @map("exercise_id")
  description String
  isCorrect   Boolean  @map("is_correct")
  createdAt   DateTime @default(now()) @map("created_at")
  updatedAt   DateTime @updatedAt @map("updated_at")

  exercise Exercise @relation(fields: [exerciseId], references: [id])

  @@map("alternative")
}

model Answer {
  id          Int      @id @default(autoincrement())
  exerciseId  Int      @map("exercise_id")
  description String
  createdAt   DateTime @default(now()) @map("created_at")
  updatedAt   DateTime @updatedAt @map("updated_at")

  exercise Exercise @relation(fields: [exerciseId], references: [id])

  @@map("answer")
}
