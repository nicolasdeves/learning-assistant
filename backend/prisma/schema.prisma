generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Topic {
  id        Int       @id @default(autoincrement())
  name      String
  activities Activity[]
  created_at DateTime @default(now())
  updated_at DateTime @updatedAt

  @@map("topic")
}

model Activity {
  id        Int       @id @default(autoincrement())
  user_id   Int
  topic_id  Int
  name      String
  date      DateTime
  exercises Exercise[]
  created_at DateTime @default(now())
  updated_at DateTime @updatedAt

  topic Topic @relation(fields: [topic_id], references: [id])

  @@map("activity")
}

model ExerciseType {
  id          Int        @id @default(autoincrement())
  description String
  exercises   Exercise[]
  created_at DateTime @default(now())
  updated_at DateTime @updatedAt

  @@map("exercise_type")
}

model Exercise {
  id               Int          @id @default(autoincrement())
  exercise_type_id Int
  activity_id      Int
  name             String
  description      String
  finished_at      DateTime?
  created_at DateTime @default(now())
  updated_at DateTime @updatedAt

  exerciseType ExerciseType @relation(fields: [exercise_type_id], references: [id])
  activity     Activity     @relation(fields: [activity_id], references: [id])
  alternatives Alternative[]
  answers      Answer[]

  @@map("exercise")
}

model Alternative {
  id          Int      @id @default(autoincrement())
  exercise_id Int
  description String
  is_correct  Boolean
  created_at DateTime @default(now())
  updated_at DateTime @updatedAt

  exercise Exercise @relation(fields: [exercise_id], references: [id])

  @@map("alternative")
}

model Answer {
  id          Int      @id @default(autoincrement())
  exercise_id Int
  description String
  created_at DateTime @default(now())
  updated_at DateTime @updatedAt

  exercise Exercise @relation(fields: [exercise_id], references: [id])

  @@map("answer")
}
